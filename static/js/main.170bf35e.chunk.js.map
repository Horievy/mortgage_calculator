{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/edit-bank-list-item/edit-bank-list-item.js","components/bank-list-item/bank-list-item.js","components/bank-list/index.js","components/bank-list/bank-list.js","components/add-item-form/index.js","components/add-item-form/add-item-form.js","components/mortgage-calculator/index.js","components/mortgage-calculator/mortgage-calculator.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","activeClassName","className","isActive","undefined","to","EditBankListItem","data","id","bankName","onEdit","isEditingEnabled","toggleEditBlock","getFormData","target","interestsRate","interests","value","maximumLoan","minDownPayment","loanTerm","onSubmit","e","preventDefault","updatedBankData","required","name","type","onClick","BankListItem","props","useState","onDeleted","BankList","banks","elements","map","item","AddItemForm","onAddItem","isAddEnabled","toggleAddBlock","MortgageCalculator","selectedBankData","toggleBankChoice","banksOptions","calculateMonthlyPayment","p","n","i","Math","pow","downPayment","amountBorrowed","initLoan","monthlyInterests","console","log","onChange","selectedBankId","options","selectedIndex","selectedBank","find","bank","max","min","App","deleteItem","setState","banksData","filter","el","addItem","newArrItem","editedEl","toggleProp","state","arr","newEl","minId","path","element","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.170bf35e.chunk.js","sourcesContent":["import AppHeader from './app-header';\n\nexport default AppHeader;\n","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport './app-header.css';\n\nconst AppHeader = () => {\n  let activeClassName = \"app-header-active\";\n\n  return (\n    <div className=\"app-header d-flex\">\n      <h1>Mortgage Calculator</h1>\n      <nav>\n        <NavLink\n         className={({ isActive }) =>\n            isActive ? activeClassName : undefined} \n          to=\"/\">Banks</NavLink>\n        <NavLink\n          className={({ isActive }) =>\n            isActive ? activeClassName : undefined} \n          to=\"/calculate\">Calculate mortgage</NavLink>\n      </nav>\n      <div className=\"top-panel d-flex\"></div>\n    </div>\n  );\n};\n\nexport default AppHeader;\n","import './edit-bank-list-item.css';\n\nconst EditBankListItem = (data) => {\n  const { id, bankName, onEdit, isEditingEnabled, toggleEditBlock} = data\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const updatedBankData = getFormData(e.target)\n\n    onEdit(updatedBankData);\n    toggleEditBlock(!isEditingEnabled)\n  }\n\n  const getFormData = (target) => {\n    return {\n      bankName: bankName,\n      id: id,\n      interestsRate: +target.interests.value,\n      maximumLoan: +target.maximumLoan.value,\n      minDownPayment: +target.minDownPayment.value,\n      loanTerm: +target.loanTerm.value,\n      } \n  }\n      return (\n        <form \n        className=\"edit-bank-list-item\"\n        onSubmit={onSubmit}>\n          <div>\n            <h4 className=\"edit-bank-list-item-label\">Edit bank data</h4>\n          </div>\n          \n          <div>\n            <div className=\"form-group\">\n              <label>Update InterestsRate *:\n                <input required name=\"interests\" className=\"form-control\" type=\"number\"></input>\n              </label>\n            </div>\n            <div className=\"form-group\">\n              <label>Update Maximum loan *: \n                <input required name=\"maximumLoan\" className=\"form-control\" type=\"number\"></input>\n              </label>\n            </div>\n            <div className=\"form-group\">\n              <label>Update Minimum down payment *:\n                <input required name=\"minDownPayment\" className=\"form-control\" type=\"number\"></input>\n              </label>\n            </div>\n              <div className=\"form-group\">\n              <label>Update Loan term in months *:\n                <input required name=\"loanTerm\" className=\"form-control\" type=\"number\"></input>\n              </label>\n            </div>\n          </div>\n          \n          <div className=\"edit-bank-list-buttons\">\n            <button type=\"submit\"\n                    className=\"btn btn-outline-success btn float-right\">\n                      Save\n            </button>\n            <button type=\"button\"\n                    className=\"btn btn-outline-danger btn float-right\"\n                    onClick={() => toggleEditBlock(!isEditingEnabled)}>\n                      Cancel\n            </button>\n          </div>\n          \n        </form>\n      );\n\n}\n\nexport default EditBankListItem;","import React, { useState } from 'react';\n\nimport './bank-list-item.css';\n\nimport EditBankListItem from '../edit-bank-list-item/edit-bank-list-item'\n\nconst BankListItem = (props) => {\n  const [isEditingEnabled, toggleEditBlock] = useState(false);\n  const { bankName, interestsRate, maximumLoan, minDownPayment, loanTerm, onDeleted} = props\n\n      return (\n        <div>\n          <div className=\"bank-list-item\">\n          <div>\n            <h4 className=\"bank-list-item-label\">{bankName}</h4>\n            <ul className=\"bank-list-options\">\n              <li className=\"bank-list-options-item\">\n                Interests Rate: %{interestsRate}\n              </li>\n              <li className=\"bank-list-options-item\">\n                Maximum loan: ${maximumLoan}\n              </li>\n              <li className=\"bank-list-options-item\">\n                Minimum down payment: ${minDownPayment}\n              </li>\n              <li className=\"bank-list-options-item\">\n                Loan term: {loanTerm} moth\n              </li>\n            </ul>\n          </div>\n          \n    \n          <div className=\"bank-list-buttons\">\n            <button type=\"button\"\n                    className=\"btn btn-outline-warning btn-lg float-right\"\n                    onClick={() => toggleEditBlock(!isEditingEnabled)}>\n              <i className=\"fa fa-edit\" />\n            </button>\n      \n            <button type=\"button\"\n                    className=\"btn btn-outline-danger btn-lg float-right\"\n                    onClick={() => onDeleted()}>\n              <i className=\"fa fa-trash-o\" />\n            </button>\n          </div>\n          \n\n          </div>\n          {isEditingEnabled && <EditBankListItem\n          { ...props }\n          isEditingEnabled={isEditingEnabled}\n          toggleEditBlock={toggleEditBlock} />}\n\n        </div>\n        \n      );\n}\n\nexport default BankListItem;","import BankList from \"./bank-list\";\n\nexport default BankList;","import React from 'react';\n\nimport BankListItem from '../bank-list-item/bank-list-item';\nimport './bank-list.css';\n\nconst BankList = ({ banks, onDeleted, onEdit }) => {\n\n  const elements = banks.map((item) => {\n\n    return (\n      <li key={item.id} className=\"list-group-item\">\n        <BankListItem \n          { ...item }\n          onDeleted={() => onDeleted(item.id)}\n          onEdit={onEdit} />\n      </li>\n    );\n  });\n\n  return (\n    <ul className=\"list-group bank-list\">\n      { elements }\n    </ul>\n  );\n};\n\nexport default BankList;\n","import AddItemForm from './add-item-form';\n\nexport default AddItemForm;\n","import React, { useState } from 'react';\n\nimport './add-item-form.css';\n\nconst AddItemForm  = ({id, onAddItem}) => {\n  const [isAddEnabled, toggleAddBlock] = useState(false);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const updatedBankData = getFormData(e.target)\n\n    onAddItem(updatedBankData);\n    toggleAddBlock(!isAddEnabled)\n  }\n\n  const getFormData = (target) => {\n    return {\n      bankName: target.bankName.value,\n      id: id,\n      interestsRate: +target.interests.value,\n      maximumLoan: +target.maximumLoan.value,\n      minDownPayment: +target.minDownPayment.value,\n      loanTerm: +target.loanTerm.value,\n      } \n  }\n\n    return (\n      <div className=\"add-item-wrap\">\n        <button type=\"submit\"\n                className=\"btn btn-success add-item\"\n                onClick={() => toggleAddBlock(!isAddEnabled)}>\n                  Add item\n        </button>\n\n        {isAddEnabled &&\n        <form \n          className=\"edit-bank-list-item\"\n          onSubmit={onSubmit}>\n          <div>\n            <h4 className=\"edit-bank-list-item-label\">Add new bank</h4>\n          </div>\n        \n            <div className=\"form-group\">\n              <label>Bank Name *:\n                <input required name=\"bankName\" className=\"form-control\" type=\"text\"></input>\n              </label>\n            </div>\n            <div className=\"form-group\">\n              <label>InterestsRate *:\n                <input required name=\"interests\" className=\"form-control\" type=\"number\"></input>\n              </label>\n            </div>\n            <div className=\"form-group\">\n              <label>Maximum loan *: \n                <input required name=\"maximumLoan\" className=\"form-control\" type=\"number\"></input>\n              </label>\n            </div>\n            <div className=\"form-group\">\n              <label>Minimum down payment *:\n                <input required name=\"minDownPayment\" className=\"form-control\" type=\"number\"></input>\n              </label>\n            </div>\n              <div className=\"form-group\">\n              <label>Loan term in months *:\n                <input required name=\"loanTerm\" className=\"form-control\" type=\"number\"></input>\n              </label>\n            </div>\n        \n          <div className=\"edit-bank-list-buttons\">\n            <button type=\"submit\"\n                    className=\"btn btn-outline-success btn float-right\">\n                      Save\n            </button>\n            <button type=\"button\"\n                    className=\"btn btn-outline-danger btn float-right\"\n                    onClick={() => toggleAddBlock(!isAddEnabled)}>\n                      Cancel\n            </button>\n          </div>\n        \n        </form>\n          }         \n      </div>\n    );\n}\n\nexport default AddItemForm;","import MortgageCalculator from './mortgage-calculator';\n\nexport default MortgageCalculator;\n","import React, { useState } from 'react';\n\nimport './mortgage-calculator.css';\n\nconst MortgageCalculator = ({banks}) => {\n  const [selectedBankData, toggleBankChoice] = useState(false);\n\n  const banksOptions = banks.map((item) => {\n    return (\n      <option \n        key={item.id}\n        value={item.id}>\n        {item.bankName}\n      </option>\n    );\n  });\n\n  const handleChange = (e) => {\n    const selectedBankId = +e.target.options[e.target.selectedIndex].value;\n    const selectedBank = banks.find((bank) => bank.id === selectedBankId);\n\n    toggleBankChoice(selectedBank)\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    const downPayment = e.target.downPayment.value;\n    const initLoan = e.target.initLoan.value;\n    const amountBorrowed = initLoan - downPayment;\n    const monthlyInterests = +selectedBankData.interestsRate / 100 / 12\n\n    console.log(calculateMonthlyPayment(+amountBorrowed, selectedBankData.loanTerm, monthlyInterests));\n  }\n\n  const calculateMonthlyPayment = (p, n, i) => {\n    return p * i * (Math.pow(1 + i, n)) / (Math.pow(1 + i, n) - 1);\n  }\n\n  return (\n    <div className=\"mortgage-calculator\">\n        <form \n          onSubmit={onSubmit}>\n          <div>\n            <h4 className=\"edit-bank-list-item-label\">Calculate your mortgage</h4>\n          </div>\n        \n          <div className=\"form-group\">\n          <label>Select your bank *\n            <select required onChange={handleChange} className=\"custom-select\">\n              <option value=\"\">Select bank</option>\n              {banksOptions}\n            </select>\n            </label>\n          </div>\n          <div className=\"form-group\">\n            <label>Initial loan *:\n              <input required name=\"initLoan\" className=\"form-control\" type=\"number\" max={selectedBankData.maximumLoan}/>\n            </label>\n            {selectedBankData && <span className=\"mortgage-calculator__info\">(max loan is {selectedBankData.maximumLoan})</span>}\n          </div>\n          <div className=\"form-group\">\n            <label>Down payment *:\n              <input required name=\"downPayment\" className=\"form-control\" type=\"number\" min={selectedBankData.minDownPayment}/>\n            </label>\n            {selectedBankData && <span className=\"mortgage-calculator__info\">(min down payment is {selectedBankData.minDownPayment})</span>}\n          </div>\n          {selectedBankData &&\n            <div>\n              <span>Interests Rate: {selectedBankData.interestsRate}%</span>\n              <br/>\n              <span>Loan term: {selectedBankData.loanTerm} months</span>\n            </div>\n          }\n        \n          <div className=\"edit-bank-list-buttons\">\n            <button type=\"submit\"\n                    className=\"btn btn-outline-success btn float-right\">\n                      Calculate\n            </button>\n          </div>\n        \n        </form> \n\n      {/* {selectedBankData &&\n        <div>\n          sddadsd\n          <h1>{selectedBankData.bankName}</h1>\n          {calculatePayment({...selectedBankData})}\n        </div>\n      } */}\n    </div>\n    \n  );\n}\n\nexport default MortgageCalculator;","import App from \"./app\";\n\nexport default App;","import { Component } from 'react';\nimport { Routes, Route } from \"react-router-dom\";\n\nimport AppHeader from '../app-header';\nimport BankList from '../bank-list';\nimport AddItemForm from '../add-item-form';\nimport MortgageCalculator from '../mortgage-calculator';\n\n\nimport './app.css';\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.minId = 1;\n\n    this.state = {\n      banksData: [\n        {\n          bankName: 'First Bank',\n          interestsRate: 10,\n          maximumLoan: 100000,\n          minDownPayment: 10000,\n          loanTerm: 120,\n          id: this.minId++\n       },\n       {\n          bankName: 'Best Bank',\n          interestsRate: 0.000001,\n          maximumLoan: 100000000,\n          minDownPayment: 1000,\n          loanTerm: 120,\n          id: this.minId++\n        },\n        {\n          bankName: 'Evil Bank',\n          interestsRate: 24.6,\n          maximumLoan: 13000000,\n          minDownPayment: 666,\n          loanTerm: 666,\n          id: this.minId++\n        }\n      ],\n    }\n  }\n\n  deleteItem = (id) => {\n    this.setState(({banksData}) => {\n      return {\n        banksData: banksData.filter(el => el.id !== id)\n      }\n    })\n  }\n\n  addItem = (newArrItem) => {\n    this.setState(({banksData}) => {\n      const updatedArr = [...banksData, newArrItem];\n\n      return {\n        banksData: updatedArr\n      }\n    })\n  }\n\n  onEdit = (editedEl) => {\n    console.log(editedEl)\n    console.log(this.toggleProp(this.state.banksData, editedEl))\n    this.setState(({banksData}) => {\n      return {\n        banksData: this.toggleProp(banksData, editedEl)\n      }\n    })\n  }\n\n  toggleProp = (arr, newEl) => {\n      return arr.map((item) => {\n        if (item.id === newEl.id) item = newEl;\n\n        return item;\n      })\n  }\n\n  render() {\n    return (\n        <Routes>\n          <Route \n            path=\"*\" \n            element={\n            <div>\n              <AppHeader/>\n              <div className=\"banks\">\n                <BankList \n                  banks={this.state.banksData}\n                  onDeleted={this.deleteItem}\n                  onEdit={this.onEdit}/>\n                <AddItemForm \n                    onAddItem={this.addItem}\n                    id={this.minId++} />\n              </div>\n            </div>} \n          />\n\n          <Route \n            path=\"calculate\" \n            element={\n              <div>\n                <AppHeader/>\n                <MortgageCalculator\n                  banks={this.state.banksData}\n                  />\n              </div>}\n          />\n        </Routes>\n    );\n  }\n }\n\n    // // <div className=\"mortgage-calculator\">\n    //          \n    //       </>} /> */}\n    //       {/* <Route path=\"invoices\" element={<Invoices />} /> */}\n    //   // </div>","import React from 'react';\nimport { BrowserRouter } from \"react-router-dom\";\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app/';\n\nimport './index.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'));"],"sourceRoot":""}